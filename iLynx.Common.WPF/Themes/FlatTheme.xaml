<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:iLynx.Common.WPF.Controls"
                    xmlns:wpf="clr-namespace:iLynx.Common.WPF"
                    xmlns:extensions="clr-namespace:iLynx.Common.WPF.Extensions">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/iLynx.Common.WPF;component/Themes/Shared.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <ContextMenu x:Key="TextBoxContextMenu">
        <MenuItem Command="ApplicationCommands.Copy" />
        <MenuItem Command="ApplicationCommands.Cut" />
        <MenuItem Command="ApplicationCommands.Paste" />
    </ContextMenu>

    <Style TargetType="{x:Type TextBox}" x:Key="{x:Type TextBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="BorderBrush" Value="{StaticResource BrushBorder}" />
        <Setter Property="ContextMenu" Value="{StaticResource TextBoxContextMenu}" />
        <Setter Property="Foreground" Value="{StaticResource BrushForeground}" />
        <Setter Property="SelectionBrush" Value="{StaticResource BrushHighlight}" />
        <Setter Property="Background" Value="{StaticResource BrushBackground}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border BorderThickness="1" x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      Margin="0" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="Background" Value="{StaticResource BrushLightBg}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource BrushMouseoverBackground}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Thumb}" x:Key="{x:Type Thumb}">
        <Setter Property="Background" Value="{StaticResource BrushMediumBg}" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="BorderBrush" Value="{StaticResource BrushBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Border CornerRadius="0" Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" Storyboard="{StaticResource HighlightAnimation}" />
                                <VisualState x:Name="Pressed" Storyboard="{StaticResource MouseDownAnimation}" />
                                <VisualState x:Name="Disabled" Storyboard="{StaticResource DisabledAnimation}" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" Storyboard="{StaticResource HighlightAnimation}" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type controls:TextBoxWithOverlay}" x:Key="{x:Type controls:TextBoxWithOverlay}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ContextMenu" Value="{StaticResource TextBoxContextMenu}" />
        <Setter Property="Foreground" Value="{StaticResource BrushForeground}" />
        <Setter Property="SelectionBrush" Value="{StaticResource BrushHighlight}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:TextBoxWithOverlay}">
                    <Border BorderThickness="1" x:Name="PART_border" Background="{TemplateBinding Background}">
                        <Grid Background="Transparent">
                            <TextBlock
                                Text="{TemplateBinding OverlayText}"
                                Background="Transparent"
                                Foreground="{TemplateBinding Foreground}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Visibility="{TemplateBinding OverlayVisibility}" />
                            <ScrollViewer x:Name="PART_ContentHost"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="DefaultStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver" Storyboard="{StaticResource HighlightAnimation}" />
                                <VisualState Name="Pressed" Storyboard="{StaticResource MouseDownAnimation}" />
                                <VisualState Name="Disabled" Storyboard="{StaticResource DisabledAnimation}" />
                                <VisualState Name="Defaulted" Storyboard="{StaticResource DefaultedAnimation}" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="{x:Type TextBlock}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource BrushForeground}" />
    </Style>

    <Style TargetType="{x:Type TextBoxBase}" x:Key="{x:Type TextBoxBase}">
        <Setter Property="Foreground" Value="{StaticResource BrushForeground}"/>
    </Style>

    <Style TargetType="{x:Type ProgressBar}" x:Key="{x:Type ProgressBar}">
        <Setter Property="BorderBrush" Value="{DynamicResource BrushBorder}" />
        <Setter Property="Background" Value="{DynamicResource BrushBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource BrushForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid x:Name="PART_Background">
                        <Border Name="PART_Track" CornerRadius="2" Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />
                        <Border Name="PART_Indicator" CornerRadius="2" Margin="1"
                                Background="{DynamicResource BrushMouseoverBackground}" BorderThickness="0"
                                HorizontalAlignment="Left" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsIndeterminate}" Value="True">
                            <Setter Property="Background" TargetName="PART_Indicator"
                                    Value="{DynamicResource BrushIndeterminate}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type GridSplitter}" x:Key="{x:Type GridSplitter}">
        <Setter Property="BorderBrush" Value="{StaticResource BrushBorder}" />
        <Setter Property="Background" Value="{StaticResource BrushBorder}" />
    </Style>

    <Style x:Key="{x:Type Button}" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="{DynamicResource BrushBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BrushBorder}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="PART_Background" BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="1"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          ContentSource="{TemplateBinding Content}" Margin="{TemplateBinding Padding}" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="DefaultStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver" Storyboard="{StaticResource HighlightAnimation}" />
                                <VisualState Name="Pressed" Storyboard="{StaticResource MouseDownAnimation}" />
                                <VisualState Name="Disabled" Storyboard="{StaticResource DisabledAnimation}" />
                                <VisualState Name="Defaulted" Storyboard="{StaticResource DefaultedAnimation}" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="AutoScalingButton" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="PART_Background" BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="1"
                            Background="{TemplateBinding Background}">
                        <Viewbox HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                 VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              ContentSource="{TemplateBinding Content}"
                                              Margin="{TemplateBinding Padding}" />
                        </Viewbox>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="DefaultStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver" Storyboard="{StaticResource HighlightAnimation}" />
                                <VisualState Name="Pressed" Storyboard="{StaticResource MouseDownAnimation}" />
                                <VisualState Name="Disabled" Storyboard="{StaticResource DisabledAnimation}" />
                                <VisualState Name="Defaulted" Storyboard="{StaticResource DefaultedAnimation}" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ToggleButton}" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="{DynamicResource BrushBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BrushBorder}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Name="PART_Background" BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="1"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          ContentSource="{TemplateBinding Content}" Margin="{TemplateBinding Padding}" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="DefaultStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver" Storyboard="{StaticResource HighlightAnimation}" />
                                <VisualState Name="Pressed" Storyboard="{StaticResource MouseDownAnimation}" />
                                <VisualState Name="Disabled" Storyboard="{StaticResource DisabledAnimation}" />
                                <VisualState Name="Checked" Storyboard="{StaticResource MouseDownAnimation}" />
                                <VisualState Name="Indeterminate" Storyboard="{StaticResource IndeterminateAnimation}" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type CheckBox}" TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Border Name="PART_Background" CornerRadius="0"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{DynamicResource BrushBackground}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualHeight}"
                                    Width="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}">
                                <Viewbox Stretch="Uniform">
                                    <Grid>
                                        <TextBlock x:Name="CheckMark" Foreground="{StaticResource BrushCheckMark}"
                                                   Text="a"
                                                   FontFamily="Webdings" Visibility="Collapsed" />
                                        <TextBlock x:Name="InderminateMark"
                                                   Foreground="{DynamicResource BrushIndeterminate}" Text="&lt;"
                                                   FontFamily="Webdings" Visibility="Collapsed" />
                                    </Grid>
                                </Viewbox>
                            </Border>
                        </BulletDecorator.Bullet>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="PART_Background"
                                                        Storyboard.TargetProperty="Background.Color"
                                                        Duration="0:0:0.250" To="{StaticResource SHighlightCol}" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="(UIElement.Visibility)"
                                            Storyboard.TargetName="CheckMark">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="(UIElement.Visibility)"
                                            Storyboard.TargetName="InderminateMark">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter Margin="4,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left"
                                          RecognizesAccessKey="True" />
                    </BulletDecorator>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AnimatedListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="DockPanel.Dock" Value="Top" />
        <Style.Triggers>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="IsSelected" Value="True" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ListBox}" x:Key="{x:Type ListBox}">
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="{StaticResource SSelectedBg}" />
        </Style.Resources>
        <Setter Property="Background" Value="{StaticResource BrushMediumBg}" />
        <Setter Property="BorderThickness" Value="0" />
    </Style>

    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
        <Grid Background="{TemplateBinding Background}" Name="PART_Background">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="2" BorderThickness="1" Background="Transparent" />
            <Border Grid.Column="0" CornerRadius="2,0,0,2" Margin="1" BorderThickness="0,0,1,0" />
            <Path x:Name="Arrow" Grid.Column="1" Fill="{StaticResource GlyphBrush}" HorizontalAlignment="Center"
                  VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="DefaultGroup">
                    <VisualState Name="Normal" />
                    <VisualState Name="MouseOver" Storyboard="{StaticResource HighlightAnimation}" />
                    <VisualState Name="Pressed" Storyboard="{StaticResource MouseDownAnimation}" />
                    <VisualState Name="Disabled" Storyboard="{StaticResource DisabledAnimation}" />
                    <VisualState Name="Checked" Storyboard="{StaticResource MouseDownAnimation}" />
                    <!--<VisualState Name="UnChecked" Storyboard="{StaticResource BackToBackgroundAnimation}"/>-->
                    <VisualState Name="Indeterminate" Storyboard="{StaticResource IndeterminateAnimation}" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
        <Border Name="PART_Background" Background="{TemplateBinding Background}">
            <Border x:Name="PART_ContentHost" Focusable="False" />
        </Border>
    </ControlTemplate>

    <Style x:Key="{x:Type ComboBox}" TargetType="ComboBox">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="MinWidth" Value="120" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Background" Value="{StaticResource BrushBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource BrushBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Name="ToggleButton"
                                      Template="{StaticResource ComboBoxToggleButton}"
                                      Focusable="False"
                                      IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                      ClickMode="Press" />
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          Margin="6,2,23,2" VerticalAlignment="Center" HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox" Style="{x:Null}"
                                 Template="{StaticResource ComboBoxTextBox}" HorizontalAlignment="Left"
                                 VerticalAlignment="Center" Margin="3,3,23,3" Focusable="True" Background="Transparent"
                                 Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}" />
                        <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}"
                               AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                            <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}" />
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4" />
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false" />
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="Separator">
        <Setter Property="Height" Value="1" />
        <Setter Property="Background" Value="{StaticResource BrushBackground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <Grid Background="{TemplateBinding Background}">
                        <Border BorderBrush="{StaticResource SolidBorderBrush}" BorderThickness="1"
                                VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ToggleButton}"
           x:Key="ExpanderToggle">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="{StaticResource BrushBackground}"/>
        <Setter Property="Foreground" Value="{StaticResource BrushForeground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BrushBorder}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="1"
                            RenderTransformOrigin="0.5,0.5">
                        <Viewbox Margin="{TemplateBinding Padding}">
                            <Path Data="M0.5,30.5 L10.5,30.5 40.5,60.5 70.5,30.5 80.5,30.5 40.5,70.5 z M0.5,0.5 L10.5,0.5 40.5,30.5 70.5,0.5 80.5,0.5 40.5,40.5 z"
                                  Fill="{TemplateBinding Foreground}"
                                  Stroke="{TemplateBinding BorderBrush}"
                                  Stretch="Fill" />
                        </Viewbox>
                        <Border.RenderTransform>
                            <RotateTransform x:Name="ButtonTransform" Angle="0" />
                        </Border.RenderTransform>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="DefaultStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver" Storyboard="{StaticResource HighlightAnimation}" />
                                <VisualState Name="Pressed" Storyboard="{StaticResource MouseDownAnimation}" />
                                <VisualState Name="Disabled" Storyboard="{StaticResource DisabledAnimation}" />
                                <VisualState Name="Checked" Storyboard="{StaticResource MouseDownAnimation}" />
                                <VisualState Name="Indeterminate" Storyboard="{StaticResource IndeterminateAnimation}" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ButtonTransform"
                                             Storyboard.TargetProperty="Angle"
                                             From="0"
                                             To="-180"
                                             Duration="0:00:00.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ButtonTransform"
                                             Storyboard.TargetProperty="Angle"
                                             From="-180"
                                             To="0"
                                             Duration="0:00:00.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ToggleButton}"
           x:Key="TreeViewExpanderToggle">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="{StaticResource BrushBackground}"/>
        <Setter Property="Foreground" Value="{StaticResource BrushForeground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BrushBorder}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="1"
                            RenderTransformOrigin="0.5,0.5">
                        <Viewbox Margin="{TemplateBinding Padding}">
                            <Path Data="M0.5,30.5 L10.5,30.5 40.5,60.5 70.5,30.5 80.5,30.5 40.5,70.5 z M0.5,0.5 L10.5,0.5 40.5,30.5 70.5,0.5 80.5,0.5 40.5,40.5 z"
                                  Fill="{TemplateBinding Foreground}"
                                  Stroke="{TemplateBinding BorderBrush}"
                                  Stretch="Fill" />
                        </Viewbox>
                        <Border.RenderTransform>
                            <RotateTransform x:Name="ButtonTransform" Angle="-90" />
                        </Border.RenderTransform>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="DefaultStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver" Storyboard="{StaticResource HighlightAnimation}" />
                                <VisualState Name="Pressed" Storyboard="{StaticResource MouseDownAnimation}" />
                                <VisualState Name="Disabled" Storyboard="{StaticResource DisabledAnimation}" />
                                <VisualState Name="Checked" Storyboard="{StaticResource MouseDownAnimation}" />
                                <VisualState Name="Indeterminate" Storyboard="{StaticResource IndeterminateAnimation}" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ButtonTransform"
                                             Storyboard.TargetProperty="Angle"
                                             From="-90"
                                             To="0"
                                             Duration="0:00:00.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ButtonTransform"
                                             Storyboard.TargetProperty="Angle"
                                             From="0"
                                             To="-90"
                                             Duration="0:00:00.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="HorizontalExpanderTemplate" TargetType="{x:Type Expander}">
        <ControlTemplate.Resources>
            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                <Setter Property="IsHitTestVisible" Value="False"/>
            </Style>
        </ControlTemplate.Resources>
        <Border x:Name="PART_Border"
                BorderThickness="{TemplateBinding BorderThickness}"
                BorderBrush="{TemplateBinding BorderBrush}"
                Background="{TemplateBinding Background}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <ToggleButton x:Name="PART_ExpanderButton"
                          Grid.Row="0"
                          Grid.Column="0"
                          IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                          Width="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}"
                          Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(extensions:ExpanderExtensions.ToggleButtonVisibility)}"
                          VerticalAlignment="Stretch"
                          Padding="2"
                          Margin="2"
                          Style="{StaticResource ExpanderToggle}"/>
                <ToggleButton x:Name="PART_Header"
                          Grid.Row="0"
                          Grid.Column="1"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch"
                          IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                          BorderThickness="0"
                          BorderBrush="Transparent"
                          FontSize="14"
                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                          Content="{TemplateBinding Header}">
                    <ToggleButton.Style>
                        <Style TargetType="{x:Type ToggleButton}">
                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                        <Border Background="#01FFFFFF">
                                            <ContentPresenter/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ToggleButton.Style>
                    <ToggleButton.LayoutTransform>
                        <ScaleTransform x:Name="HeaderTransform"
                                    ScaleY="1.0"
                                    ScaleX="1.0" />
                    </ToggleButton.LayoutTransform>
                </ToggleButton>
                <ContentPresenter Grid.Row="1"
                              Grid.Column="0"
                              Grid.ColumnSpan="2"
                              ContentSource="Content"
                              RenderTransformOrigin="0.5,0.0">
                    <ContentPresenter.RenderTransform>
                        <ScaleTransform x:Name="ContentTransform" ScaleX="1" ScaleY="0" />
                    </ContentPresenter.RenderTransform>
                    <ContentPresenter.LayoutTransform>
                        <ScaleTransform x:Name="ContentLayoutTransform" ScaleX="1" ScaleY="0"/>
                    </ContentPresenter.LayoutTransform>
                </ContentPresenter>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="ContentTransform"
                                             Storyboard.TargetProperty="ScaleY"
                                             From="0.0"
                                             To="1.0"
                                             Duration="0:00:00.125" />
                            <DoubleAnimation Storyboard.TargetName="ContentLayoutTransform"
                                             Storyboard.TargetProperty="ScaleY"
                                             From="0.0"
                                             To="1.0"
                                             Duration="0:00:00.125" />
                            <DoubleAnimation Storyboard.TargetName="HeaderTransform"
                                             Storyboard.TargetProperty="ScaleX"
                                             From="1.0"
                                             To="2.0"
                                             Duration="0:00:00.125" />
                            <DoubleAnimation Storyboard.TargetName="HeaderTransform"
                                             Storyboard.TargetProperty="ScaleY"
                                             From="1.0"
                                             To="2.0"
                                             Duration="0:00:00.125" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="ContentTransform"
                                             Storyboard.TargetProperty="ScaleY"
                                             From="1.0"
                                             To="0.0"
                                             Duration="0:00:00.125" />
                            <DoubleAnimation Storyboard.TargetName="ContentLayoutTransform"
                                             Storyboard.TargetProperty="ScaleY"
                                             From="1.0"
                                             To="0.0"
                                             Duration="0:00:00.125" />
                            <DoubleAnimation Storyboard.TargetName="HeaderTransform"
                                             Storyboard.TargetProperty="ScaleX"
                                             From="2.0"
                                             To="1.0"
                                             Duration="0:00:00.125" />
                            <DoubleAnimation Storyboard.TargetName="HeaderTransform"
                                             Storyboard.TargetProperty="ScaleY"
                                             From="2.0"
                                             To="1.0"
                                             Duration="0:00:00.125" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="VerticalExpanderTemplate" TargetType="{x:Type Expander}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Border Grid.RowSpan="2"
                    Grid.ColumnSpan="2"
                    x:Name="PART_Border"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    BorderBrush="{TemplateBinding BorderBrush}" />
            <ContentPresenter x:Name="PART_Header"
                              Grid.Row="1"
                              Grid.Column="0"
                              ContentSource="Header"
                              VerticalAlignment="Top"
                              Height="24">
                <ContentPresenter.LayoutTransform>
                    <TransformGroup>
                        <ScaleTransform x:Name="HeaderTransform"
                                        ScaleY="1.0"
                                        ScaleX="1.0" />
                        <RotateTransform Angle="-90" />
                    </TransformGroup>
                </ContentPresenter.LayoutTransform>
            </ContentPresenter>
            <ToggleButton x:Name="PART_ExpanderButton"
                          Grid.Row="0"
                          Grid.Column="0"
                          IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                          Height="{Binding ElementName=PART_Header, Path=ActualHeight}"
                          Width="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}"
                          Padding="2"
                          RenderTransformOrigin="0.5,0.5"
                          Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(extensions:ExpanderExtensions.ToggleButtonVisibility)}"
                          Margin="2">
                <ToggleButton.Content>
                    <Path
                        Data="M0.5,30.5 L10.5,30.5 40.5,60.5 70.5,30.5 80.5,30.5 40.5,70.5 z M0.5,0.5 L10.5,0.5 40.5,30.5 70.5,0.5 80.5,0.5 40.5,40.5 z"
                        Fill="{StaticResource BrushForeground}"
                        Stroke="{StaticResource BrushBorder}"
                        RenderTransformOrigin="0.5,0.5"
                        Stretch="Fill" />
                </ToggleButton.Content>
                <ToggleButton.RenderTransform>
                    <RotateTransform x:Name="ButtonTransform" Angle="-90" />
                </ToggleButton.RenderTransform>
            </ToggleButton>
            <ContentPresenter Grid.Row="0"
                              Grid.Column="1"
                              Grid.RowSpan="2"
                              ContentSource="Content"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                <ContentPresenter.LayoutTransform>
                    <ScaleTransform x:Name="ContentTransform" ScaleX="0" ScaleY="1" />
                </ContentPresenter.LayoutTransform>
            </ContentPresenter>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="ContentTransform"
                                             Storyboard.TargetProperty="ScaleX"
                                             From="0.0"
                                             To="1.0"
                                             Duration="0:00:00.125" />
                            <DoubleAnimation Storyboard.TargetName="HeaderTransform"
                                             Storyboard.TargetProperty="ScaleX"
                                             From="1.0"
                                             To="2.0"
                                             Duration="0:00:00.125" />
                            <DoubleAnimation Storyboard.TargetName="HeaderTransform"
                                             Storyboard.TargetProperty="ScaleY"
                                             From="1.0"
                                             To="2.0"
                                             Duration="0:00:00.125" />
                            <DoubleAnimation Storyboard.TargetName="ButtonTransform"
                                             Storyboard.TargetProperty="Angle"
                                             From="-90"
                                             To="90"
                                             Duration="0:00:00.125" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="ContentTransform"
                                             Storyboard.TargetProperty="ScaleX"
                                             From="1.0"
                                             To="0.0"
                                             Duration="0:00:00.125" />
                            <DoubleAnimation Storyboard.TargetName="HeaderTransform"
                                             Storyboard.TargetProperty="ScaleX"
                                             From="2.0"
                                             To="1.0"
                                             Duration="0:00:00.125" />
                            <DoubleAnimation Storyboard.TargetName="HeaderTransform"
                                             Storyboard.TargetProperty="ScaleY"
                                             From="2.0"
                                             To="1.0"
                                             Duration="0:00:00.125" />
                            <DoubleAnimation Storyboard.TargetName="ButtonTransform"
                                             Storyboard.TargetProperty="Angle"
                                             From="90"
                                             To="-90"
                                             Duration="0:00:00.125" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{x:Type Expander}" TargetType="{x:Type Expander}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="BorderBrush" Value="{StaticResource BrushBorder}"/>
        <Setter Property="Background" Value="{StaticResource BrushBackground}" />
        <Style.Triggers>
            <Trigger Property="extensions:ExpanderExtensions.Orientation" Value="Horizontal">
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template" Value="{StaticResource HorizontalExpanderTemplate}" />
            </Trigger>
            <Trigger Property="extensions:ExpanderExtensions.Orientation" Value="Vertical">
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Top"/>
                <Setter Property="Template" Value="{StaticResource VerticalExpanderTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- TopLevelHeader -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="MenuItem">
        <Border Name="PART_Background" Background="{TemplateBinding Background}">
            <Grid>
                <ContentPresenter ContentSource="Header" RecognizesAccessKey="True"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  Margin="{TemplateBinding Padding}" />
                <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsSubmenuOpen}"
                       AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                    <Border Name="SubmenuBorder" SnapsToDevicePixels="True" BorderThickness="1" CornerRadius="4">
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="Popup" Property="PopupAnimation" Value="None" />
            </Trigger>

            <Trigger Property="IsHighlighted" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard Name="anim" Storyboard="{StaticResource HighlightAnimation}" />
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <StopStoryboard BeginStoryboardName="anim" />
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsSubmenuOpen" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard Name="selected" Storyboard="{StaticResource ItemSelectedAnimation}" />
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <StopStoryboard BeginStoryboardName="selected" />
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource BrushDisabled}" />
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!-- TopLevelItem -->

    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="MenuItem">
        <Border Name="PART_Background" Background="{TemplateBinding Background}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                Margin="{TemplateBinding Padding}">
            <!--<Grid>-->
            <ContentPresenter Margin="6,3,6,3" ContentSource="Header" RecognizesAccessKey="True" />
            <!--</Grid>-->
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard Name="anim" Storyboard="{StaticResource HighlightAnimation}" />
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <StopStoryboard BeginStoryboardName="anim" />
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsSubmenuOpen" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard Name="selected" Storyboard="{StaticResource ItemSelectedAnimation}" />
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <StopStoryboard BeginStoryboardName="selected" />
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource BrushDisabled}" />
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- SubmenuItem -->

    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="MenuItem">
        <Border Name="PART_Background" Background="{TemplateBinding Background}">
            <Grid VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                  Margin="{TemplateBinding Padding}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                    <ColumnDefinition Width="13" />
                </Grid.ColumnDefinitions>
                <ContentPresenter Name="Icon" Margin="6,0,6,0" ContentSource="Icon" />
                <Border Grid.Column="0" Name="Check"
                        Width="13"
                        Height="13"
                        Visibility="Collapsed"
                        Margin="6,0,6,0"
                        Background="{StaticResource BrushLightBg}"
                        BorderThickness="1"
                        BorderBrush="{StaticResource BrushBorder}">
                    <Path Name="CheckMark"
                          Width="7"
                          Height="7" Visibility="Hidden" SnapsToDevicePixels="False"
                          Stroke="{StaticResource GlyphBrush}" StrokeThickness="2" Data="M 0 0 L 7 7 M 0 7 L 7 0" />
                </Border>
                <ContentPresenter Name="HeaderHost" Grid.Column="1" ContentSource="Header" RecognizesAccessKey="True" />
                <TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}"
                           Margin="5,2,0,2" DockPanel.Dock="Right" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsCheckable" Value="true">
                <Setter TargetName="Check" Property="Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard Name="anim" Storyboard="{StaticResource HighlightAnimation}" />
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <StopStoryboard BeginStoryboardName="anim" />
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsSubmenuOpen" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard Name="selected" Storyboard="{StaticResource ItemSelectedAnimation}" />
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <StopStoryboard BeginStoryboardName="selected" />
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" Value="{StaticResource BrushDisabled}" />
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- SubmenuHeader -->

    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="MenuItem">
        <Border Name="PART_Background" Background="{TemplateBinding Background}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                    <ColumnDefinition Width="13" />
                </Grid.ColumnDefinitions>
                <ContentPresenter Name="Icon" Margin="6,0,6,0" VerticalAlignment="Center" ContentSource="Icon" />
                <ContentPresenter Name="HeaderHost" Grid.Column="1" ContentSource="Header" RecognizesAccessKey="True"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                <TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}"
                           Margin="5,2,2,2" DockPanel.Dock="Right" />
                <Path Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center"
                      Data="M 0 0 L 0 7 L 4 3.5 Z" Fill="{StaticResource GlyphBrush}"
                      x:Name="Glyph" />
                <Popup Grid.Column="0" Name="Popup" Placement="Left" PlacementTarget="{Binding ElementName=Glyph}"
                       HorizontalOffset="-4" IsOpen="{TemplateBinding IsSubmenuOpen}"
                       AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
                    <Border Name="SubmenuBorder" SnapsToDevicePixels="True" BorderThickness="1">
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard Name="anim" Storyboard="{StaticResource HighlightAnimation}" />
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <StopStoryboard BeginStoryboardName="anim" />
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsSubmenuOpen" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard Name="selected" Storyboard="{StaticResource ItemSelectedAnimation}" />
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <StopStoryboard BeginStoryboardName="selected" />
                </Trigger.ExitActions>
            </Trigger>
            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="4" />
                <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" Value="{StaticResource BrushDisabled}" />
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- MenuItem Style -->

    <Style x:Key="{x:Type MenuItem}" TargetType="MenuItem">
        <Setter Property="Background" Value="{StaticResource BrushBackground}" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="4,0" />
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}" />
                <Setter Property="Grid.IsSharedSizeScope" Value="true" />
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Menu}" x:Key="{x:Type Menu}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Menu">
                    <Border BorderThickness="0">
                        <StackPanel ClipToBounds="True" Orientation="Horizontal" IsItemsHost="True" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ContextMenu}" x:Key="{x:Type ContextMenu}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Grid.IsSharedSizeScope" Value="true" />
        <Setter Property="HasDropShadow" Value="True" />
        <Setter Property="Background" Value="{StaticResource BrushBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource BrushBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContextMenu">
                    <Border Name="Border" Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="true">
                            <Setter TargetName="Border" Property="Padding" Value="0,3,0,3" />
                            <Setter TargetName="Border" Property="CornerRadius" Value="4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border x:Name="PART_Background" Background="{TemplateBinding Background}" Margin="1"
                            CornerRadius="2" BorderThickness="1">
                        <Path HorizontalAlignment="Center" VerticalAlignment="Center"
                              Fill="{StaticResource GlyphBrush}"
                              Data="{Binding Path=Content,RelativeSource={RelativeSource TemplatedParent}}" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ScrollStates">
                                <VisualState Name="Normal" />
                                <!--<VisualState Name="MouseOver" Storyboard="{StaticResource HighlightAnimation}"/>
                                <VisualState Name="Pressed" Storyboard="{StaticResource MouseDownAnimation}"/>
                                <VisualState Name="Disabled" Storyboard="{StaticResource DisabledAnimation}"/>-->
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border x:Name="PART_Background" Background="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Background" Value="{DynamicResource BrushMediumBg}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border x:Name="PART_Background" CornerRadius="2" Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="DefaultStates">
                                <VisualState Name="Normal" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="18" />
                <RowDefinition Height="0.00001*" />
                <RowDefinition MaxHeight="18" />
            </Grid.RowDefinitions>
            <Border x:Name="PART_Background" Grid.RowSpan="3" CornerRadius="2" />
            <RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarLineButton}" Height="18"
                          Command="ScrollBar.LineUpCommand" Content="M 0 4 L 8 4 L 4 0 Z" />
            <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}" Margin="1,0,1,0"
                           BorderBrush="{DynamicResource BrushBorder}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Row="2" Style="{StaticResource ScrollBarLineButton}" Height="18"
                          Command="ScrollBar.LineDownCommand" Content="M 0 0 L 4 4 L 8 0 Z" />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="18" />
                <ColumnDefinition Width="0.00001*" />
                <ColumnDefinition MaxWidth="18" />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="3" CornerRadius="2" />
            <RepeatButton Grid.Column="0" Style="{StaticResource ScrollBarLineButton}" Width="18"
                          Command="ScrollBar.LineLeftCommand" Content="M 4 0 L 4 8 L 0 4 Z" />
            <Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}" Margin="0,1,0,1"
                           BorderBrush="{DynamicResource BrushBorder}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Column="2" Style="{StaticResource ScrollBarLineButton}" Width="18"
                          Command="ScrollBar.LineRightCommand" Content="M 0 0 L 4 4 L 0 8 Z" />
        </Grid>
    </ControlTemplate>

    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="Height" Value="18" />
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="18" />
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type ScrollViewer}" TargetType="{x:Type ScrollViewer}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ScrollBar x:Name="PART_HorizontalScrollBar" Orientation="Horizontal" Grid.Row="1"
                                   Minimum="0.0" Maximum="{TemplateBinding ScrollableWidth}"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HorizontalOffset, Mode=OneWay}"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                   AutomationProperties.AutomationId="HorizontalScrollBar" />
                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                   Grid.Row="0"
                                   Grid.Column="1"
                                   Minimum="0.0"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=VerticalOffset, Mode=OneWay}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   AutomationProperties.AutomationId="VerticalScrollBar" />
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                Grid.Row="0"
                                                Grid.Column="0"
                                                Margin="{TemplateBinding Padding}"
                                                Content="{TemplateBinding Content}"
                                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                                CanContentScroll="{TemplateBinding CanContentScroll}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TabItem}" x:Key="{x:Type TabItem}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background" Value="{StaticResource BrushBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource BrushBorder}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border Name="Border" Margin="0,0,-8,0" Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,1"
                            CornerRadius="8,8,0,0">
                        <ContentPresenter Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center"
                                          ContentSource="Header" Margin="12,2,12,2" RecognizesAccessKey="True"/>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver" Storyboard="{StaticResource HighlightAnimation}" />
                                <VisualState Name="Selected" Storyboard="{StaticResource MouseDownAnimation}" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Panel.ZIndex" Value="5000"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type TabControl}" x:Key="{x:Type TabControl}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="{StaticResource BrushBackground}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource BrushBorder}" />
        <Setter Property="Foreground" Value="{StaticResource BrushForeground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid KeyboardNavigation.TabNavigation="Local"
                          HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                          VerticalAlignment="{TemplateBinding VerticalAlignment}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <TabPanel Name="HeaderPanel" Grid.Row="0" Panel.ZIndex="1" Margin="0,0,4,-1" IsItemsHost="True"
                                  KeyboardNavigation.TabIndex="1" Background="Transparent"/>
                        <Border Name="Border" Grid.Row="1" Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="2"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                KeyboardNavigation.TabNavigation="Local"
                                KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2">
                            <ContentPresenter Margin="4"
                                              ContentSource="SelectedContent"
                                              HorizontalAlignment="Stretch"
                                              VerticalAlignment="Stretch"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource BrushBackground}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource BrushBorder}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type GroupBox}">
        <Setter Property="BorderBrush" Value="{StaticResource BrushBorder}" />
        <Setter Property="Foreground" Value="{StaticResource BrushForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GroupBox">
                    <Grid Margin="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Line Stroke="{TemplateBinding BorderBrush}"
                              StrokeThickness="1"
                              HorizontalAlignment="Left"
                              Width="4"
                              Margin="0,4,0,0" />
                        <Line Grid.Row="0"
                              Grid.RowSpan="2"
                              Stroke="{TemplateBinding BorderBrush}"
                              StrokeThickness="1"
                              HorizontalAlignment="Left"
                              VerticalAlignment="Stretch" />
                        <ContentControl Grid.Row="0"
                                        Margin="4,-4,0,0"
                                        Content="{TemplateBinding Header}"
                                        FontSize="16"
                                        FontWeight="Bold" />
                        <ContentPresenter Grid.Row="1" Margin="4" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ExpandedBorderlessWindow" TargetType="{x:Type wpf:BorderlessWindow}">
        <Border x:Name="PART_Main"
                BorderThickness="{TemplateBinding BorderThickness}"
                BorderBrush="{TemplateBinding BorderBrush}">
            <Grid Background="{TemplateBinding Background}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="{TemplateBinding HeaderSize}" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding HeaderBorderThickness}">
                        <Grid x:Name="PART_HeaderButtons">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Rectangle IsHitTestVisible="True" Grid.ColumnSpan="2"
                                       HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                       Fill="Transparent" x:Name="DragGrip" />
                            <ContentPresenter Grid.Column="0" Content="{TemplateBinding Header}"
                                              Visibility="{TemplateBinding IsCollapsed, Converter={StaticResource InvBoolToVis}}" />
                            <ContentPresenter Grid.Column="0" Content="{TemplateBinding CollapsedHeader}"
                                              Visibility="{TemplateBinding IsCollapsed, Converter={StaticResource BoolToVis}}" />
                            <TextBlock
                                Grid.Column="1"
                                HorizontalAlignment="Right"
                                FontFamily="{TemplateBinding TitleFontFamily}"
                                FontStretch="{TemplateBinding TitleFontStretch}"
                                FontSize="{TemplateBinding TitleFontSize}"
                                FontWeight="{TemplateBinding TitleFontWeight}"
                                FontStyle="{TemplateBinding TitleFontStyle}"
                                Text="{TemplateBinding Title}"
                                VerticalAlignment="Center"
                                IsHitTestVisible="False" />
                            <Button x:Name="PART_Expander" HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch" Grid.Column="2"
                                    Command="{TemplateBinding ToggleCollapsedCommand}"
                                    Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"
                                    Visibility="{TemplateBinding IsCollapsible, Converter={StaticResource BoolToVis}}"
                                    Background="Transparent"
                                    CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=wpf:BorderlessWindow}}">
                                <Border Background="{DynamicResource ToggleCollapsedBrush}"
                                        HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                        Margin="2"
                                        x:Name="collapserTarget" />
                            </Button>
                            <Button Style="{StaticResource AutoScalingButton}"
                                    Grid.Column="3" Content="0" FontFamily="Webdings"
                                    Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"
                                    Command="{TemplateBinding MinimizeCommand}"
                                    CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=wpf:BorderlessWindow}}" />
                            <Button Style="{StaticResource AutoScalingButton}"
                                    Visibility="{TemplateBinding IsCollapsed, Converter={StaticResource InvBoolToVis}}"
                                    Grid.Column="4"
                                    x:Name="maximizeButton" FontFamily="Webdings"
                                    Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"
                                    Command="{TemplateBinding ToggleMaximizedCommand}"
                                    CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=wpf:BorderlessWindow}}" />
                            <Button Grid.Column="5" Content="r" FontFamily="Webdings"
                                    Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"
                                    Command="{TemplateBinding CloseCommand}"
                                    CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=wpf:BorderlessWindow}}">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}"
                                           BasedOn="{StaticResource AutoScalingButton}">
                                        <Style.Triggers>
                                            <DataTrigger
                                                Binding="{Binding IsCollapsed, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type wpf:BorderlessWindow}}}">
                                                <Setter Property="Margin" Value="0,0,4,0" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </Grid>
                    </Border>
                    <Border Grid.Row="1">
                        <ContentPresenter x:Name="PART_Content"
                                          Visibility="{TemplateBinding IsCollapsed, Converter={StaticResource InvBoolToVis}}" />
                    </Border>
                </Grid>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsCollapsed" Value="True">
                <Setter TargetName="collapserTarget" Property="Background"
                        Value="{DynamicResource ToggleExpandedBrush}" />
            </Trigger>
            <Trigger Property="IsCollapsed" Value="False">
                <Setter TargetName="collapserTarget" Property="Background"
                        Value="{DynamicResource ToggleCollapsedBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="CollapsedBorderlessWindow" TargetType="{x:Type wpf:BorderlessWindow}">
        <Border x:Name="PART_Main"
                BorderThickness="{TemplateBinding BorderThickness}"
                BorderBrush="{TemplateBinding BorderBrush}">
            <Grid Background="{TemplateBinding Background}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="{TemplateBinding HeaderSize}" />
                </Grid.RowDefinitions>
                <Border BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding HeaderBorderThickness}">
                    <Grid x:Name="PART_HeaderButtons">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Rectangle IsHitTestVisible="True" Grid.ColumnSpan="2" HorizontalAlignment="Stretch"
                                   VerticalAlignment="Stretch" Fill="Transparent" x:Name="DragGrip" />
                        <ContentPresenter Grid.Column="0" Content="{TemplateBinding CollapsedHeader}" />
                        <TextBlock
                            Grid.Column="1"
                            HorizontalAlignment="Right"
                            FontFamily="{TemplateBinding TitleFontFamily}"
                            FontStretch="{TemplateBinding TitleFontStretch}"
                            FontSize="{TemplateBinding TitleFontSize}"
                            FontWeight="{TemplateBinding TitleFontWeight}"
                            FontStyle="{TemplateBinding TitleFontStyle}"
                            Text="{TemplateBinding Title}"
                            VerticalAlignment="Center"
                            IsHitTestVisible="False" />
                        <Button x:Name="PART_Expander" HorizontalContentAlignment="Stretch"
                                VerticalContentAlignment="Stretch" Grid.Column="2"
                                Command="{TemplateBinding ToggleCollapsedCommand}"
                                Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"
                                Visibility="{TemplateBinding IsCollapsible, Converter={StaticResource BoolToVis}}"
                                Background="Transparent"
                                CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=wpf:BorderlessWindow}}">
                            <Border Background="{DynamicResource ToggleCollapsedBrush}"
                                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                    Margin="2">
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Style.Triggers>
                                            <DataTrigger
                                                Binding="{Binding IsCollapsed, RelativeSource={RelativeSource TemplatedParent}}"
                                                Value="True">
                                                <Setter Property="Background"
                                                        Value="{DynamicResource ToggleExpandedBrush}" />
                                            </DataTrigger>
                                            <DataTrigger
                                                Binding="{Binding IsCollapsed, RelativeSource={RelativeSource TemplatedParent}}"
                                                Value="False">
                                                <Setter Property="Background"
                                                        Value="{DynamicResource ToggleCollapsedBrush}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                            </Border>
                        </Button>
                        <Button Style="{DynamicResource AutoScalingButton}"
                                Grid.Column="3" Content="0" FontFamily="Webdings"
                                Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"
                                Command="{TemplateBinding MinimizeCommand}"
                                CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=wpf:BorderlessWindow}}" />
                        <Button Style="{DynamicResource AutoScalingButton}"
                                Visibility="{TemplateBinding IsCollapsed, Converter={StaticResource InvBoolToVis}}"
                                Grid.Column="4"
                                x:Name="maximizeButton" FontFamily="Webdings"
                                Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"
                                Command="{TemplateBinding ToggleMaximizedCommand}"
                                CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=wpf:BorderlessWindow}}" />
                        <Button Grid.Column="5" Content="r" FontFamily="Webdings"
                                Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"
                                Command="{TemplateBinding CloseCommand}"
                                CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=wpf:BorderlessWindow}}">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}"
                                       BasedOn="{StaticResource AutoScalingButton}">
                                    <Style.Triggers>
                                        <DataTrigger
                                            Binding="{Binding IsCollapsed, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type wpf:BorderlessWindow}}}">
                                            <Setter Property="Margin" Value="0,0,4,0" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </Grid>
                </Border>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsCollapsed" Value="True">
                <Setter TargetName="PART_Main" Property="Height" Value="{Binding CollapsedHeight}" />
                <Setter TargetName="PART_Main" Property="Width" Value="{Binding CollapsedWidth}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type wpf:BorderlessWindow}">
        <Setter Property="Background" Value="{StaticResource BrushBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource BrushBorder}" />
        <Setter Property="BorderThickness" Value="4" />
        <Setter Property="HeaderBorderThickness" Value="0,0,0,4" />
        <Setter Property="TitleFontSize" Value="18" />
        <Setter Property="TitleFontWeight" Value="Bold" />
        <Setter Property="TitleFontFamily" Value="Verdana" />
        <Setter Property="IsCollapsible" Value="False" />
        <Setter Property="Template" Value="{StaticResource ExpandedBorderlessWindow}" />
    </Style>

    <Style TargetType="{x:Type controls:LoadScreen}">
        <Setter Property="Background" Value="{StaticResource BrushBackground}" />
        <Setter Property="Foreground" Value="{StaticResource BrushForeground}" />
        <Setter Property="Message" Value="Loading..." />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:LoadScreen}">
                    <ControlTemplate.Resources>
                        <BooleanToVisibilityConverter x:Key="BooleanToVisibility" />
                    </ControlTemplate.Resources>
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            x:Name="Root"
                            Visibility="Collapsed">
                        <Viewbox HorizontalAlignment="Stretch"
                                 VerticalAlignment="Stretch"
                                 StretchDirection="Both"
                                 Stretch="Uniform"
                                 RenderTransformOrigin="0.5,0.5">
                            <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid Grid.Column="1" Margin="4,0"
                                      VerticalAlignment="Center">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <ContentPresenter Content="{TemplateBinding Message}" />
                                    <ContentPresenter Grid.Row="1" Content="{TemplateBinding Content}" />
                                </Grid>
                                <Canvas Grid.Column="0" HorizontalAlignment="Center" Height="110" Margin="0"
                                        VerticalAlignment="Center"
                                        RenderTransformOrigin="0.5,0.5"
                                        Width="110">
                                    <Canvas.RenderTransform>
                                        <RotateTransform x:Name="CanvasTransform" CenterX="0.5" CenterY="0.5" Angle="0" />
                                    </Canvas.RenderTransform>
                                    <Path
                                        Data="M8.1235192,0.50000047 C12.333874,0.50000047 15.74704,3.8389302 15.74704,7.9577088 15.74704,12.076487 12.333874,15.415417 8.1235192,15.415417 3.9131663,15.415417 0.49999999,12.076487 0.49999999,7.9577088 0.49999999,3.8389302 3.9131663,0.50000047 8.1235192,0.50000047 z"
                                        Fill="{TemplateBinding Foreground}" HorizontalAlignment="Left" Height="20"
                                        Stretch="Fill"
                                        Stroke="Transparent" VerticalAlignment="Top" Width="20" Canvas.Left="20"
                                        Canvas.Top="20"
                                        Opacity=".3" />
                                    <Path
                                        Data="M8.1235192,0.50000047 C12.333874,0.50000047 15.74704,3.8389302 15.74704,7.9577088 15.74704,12.076487 12.333874,15.415417 8.1235192,15.415417 3.9131663,15.415417 0.49999999,12.076487 0.49999999,7.9577088 0.49999999,3.8389302 3.9131663,0.50000047 8.1235192,0.50000047 z"
                                        Fill="{TemplateBinding Foreground}" HorizontalAlignment="Left" Height="20"
                                        Stretch="Fill"
                                        Stroke="Transparent" VerticalAlignment="Top" Width="20" Canvas.Left="10"
                                        Canvas.Top="45"
                                        Opacity=".4" />
                                    <Path
                                        Data="M8.1235192,0.50000047 C12.333874,0.50000047 15.74704,3.8389302 15.74704,7.9577088 15.74704,12.076487 12.333874,15.415417 8.1235192,15.415417 3.9131663,15.415417 0.49999999,12.076487 0.49999999,7.9577088 0.49999999,3.8389302 3.9131663,0.50000047 8.1235192,0.50000047 z"
                                        Fill="{TemplateBinding Foreground}" HorizontalAlignment="Left" Height="20"
                                        Stretch="Fill"
                                        Stroke="Transparent" VerticalAlignment="Top" Width="20" Canvas.Left="20"
                                        Canvas.Top="70"
                                        Opacity=".5" />
                                    <Path
                                        Data="M8.1235192,0.50000047 C12.333874,0.50000047 15.74704,3.8389302 15.74704,7.9577088 15.74704,12.076487 12.333874,15.415417 8.1235192,15.415417 3.9131663,15.415417 0.49999999,12.076487 0.49999999,7.9577088 0.49999999,3.8389302 3.9131663,0.50000047 8.1235192,0.50000047 z"
                                        Fill="{TemplateBinding Foreground}" HorizontalAlignment="Left" Height="20"
                                        Stretch="Fill"
                                        Stroke="Transparent" VerticalAlignment="Top" Width="20" Canvas.Left="45"
                                        Canvas.Top="80"
                                        Opacity=".6" />
                                    <Path
                                        Data="M8.1235192,0.50000047 C12.333874,0.50000047 15.74704,3.8389302 15.74704,7.9577088 15.74704,12.076487 12.333874,15.415417 8.1235192,15.415417 3.9131663,15.415417 0.49999999,12.076487 0.49999999,7.9577088 0.49999999,3.8389302 3.9131663,0.50000047 8.1235192,0.50000047 z"
                                        Fill="{TemplateBinding Foreground}" HorizontalAlignment="Left" Height="20"
                                        Stretch="Fill"
                                        Stroke="Transparent" VerticalAlignment="Top" Width="20" Canvas.Left="70"
                                        Canvas.Top="70"
                                        Opacity=".7" />
                                    <Path
                                        Data="M8.1235192,0.50000047 C12.333874,0.50000047 15.74704,3.8389302 15.74704,7.9577088 15.74704,12.076487 12.333874,15.415417 8.1235192,15.415417 3.9131663,15.415417 0.49999999,12.076487 0.49999999,7.9577088 0.49999999,3.8389302 3.9131663,0.50000047 8.1235192,0.50000047 z"
                                        Fill="{TemplateBinding Foreground}" HorizontalAlignment="Left" Height="20"
                                        Stretch="Fill"
                                        Stroke="Transparent" VerticalAlignment="Top" Width="20" Canvas.Left="80"
                                        Canvas.Top="45"
                                        Opacity=".8" />
                                    <Path
                                        Data="M8.1235192,0.50000047 C12.333874,0.50000047 15.74704,3.8389302 15.74704,7.9577088 15.74704,12.076487 12.333874,15.415417 8.1235192,15.415417 3.9131663,15.415417 0.49999999,12.076487 0.49999999,7.9577088 0.49999999,3.8389302 3.9131663,0.50000047 8.1235192,0.50000047 z"
                                        Fill="{TemplateBinding Foreground}" HorizontalAlignment="Left" Height="20"
                                        Stretch="Fill"
                                        Stroke="Transparent" VerticalAlignment="Top" Width="20" Canvas.Left="70"
                                        Canvas.Top="20"
                                        Opacity=".9" />
                                    <Path
                                        Data="M8.1235192,0.50000047 C12.333874,0.50000047 15.74704,3.8389302 15.74704,7.9577088 15.74704,12.076487 12.333874,15.415417 8.1235192,15.415417 3.9131663,15.415417 0.49999999,12.076487 0.49999999,7.9577088 0.49999999,3.8389302 3.9131663,0.50000047 8.1235192,0.50000047 z"
                                        Fill="{TemplateBinding Foreground}" HorizontalAlignment="Left" Height="20"
                                        Stretch="Fill"
                                        Stroke="Transparent" VerticalAlignment="Top" Width="20" Canvas.Left="45"
                                        Canvas.Top="10"
                                        Opacity="1" />
                                </Canvas>
                            </Grid>
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Visibility" Value="Visible">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard x:Name="Storyboard">
                                        <DoubleAnimation Storyboard.TargetName="CanvasTransform"
                                                         Storyboard.TargetProperty="Angle"
                                                         From="0"
                                                         To="-360"
                                                         Duration="00:00:02.500"
                                                         RepeatBehavior="Forever" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="Storyboard"/>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsLoading" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         From="0"
                                                         To="1"
                                                         Storyboard.TargetName="Root"
                                                         Duration="0:00:00.250" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="Root"
                                                                       Duration="0">
                                            <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="Root"
                                                         From="1"
                                                         To="0"
                                                         Duration="0:00:00.250" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="Root"
                                                                       Duration="0"
                                                                       BeginTime="0:00:00.250">
                                            <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type TreeView}"
       TargetType="TreeView">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Background" Value="{StaticResource BrushBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BrushBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeView">
                    <Border Name="Border"
                            CornerRadius="1"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}">
                        <ScrollViewer Focusable="False"
                                      CanContentScroll="False"
                                      Padding="4">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type TreeViewItem}" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="1,0,0,0" />
        <Setter Property="Foreground" Value="{StaticResource BrushForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19" Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource SHighlightCol}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="SelectedInactive">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource SHighlightCol}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ExpansionStates">
                                <VisualState x:Name="Expanded">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ItemsHost">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Collapsed" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ToggleButton x:Name="Expander"
                                      Style="{StaticResource TreeViewExpanderToggle}"
                                      ClickMode="Press"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Height="14"
                                      IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <Border x:Name="Bd"
                                Grid.Row="0"
                                Grid.Column="1"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="PART_Header"
                                              ContentSource="Header"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost"
                                        Grid.Row="1"
                                        Grid.Column="1"
                                        Grid.ColumnSpan="2"
                                        Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false" />
                                <Condition Property="Width" Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinWidth" Value="75" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false" />
                                <Condition Property="Height" Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinHeight" Value="19" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}" TargetType="ScrollViewer">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <DockPanel Margin="{TemplateBinding Padding}">
                            <ScrollViewer DockPanel.Dock="Top"
                          HorizontalScrollBarVisibility="Hidden"
                          VerticalScrollBarVisibility="Hidden"
                          Focusable="false">
                                <GridViewHeaderRowPresenter Margin="2,0,2,0"
                                          Columns="{Binding Path=TemplatedParent.View.Columns, RelativeSource={RelativeSource TemplatedParent}}"
                                          ColumnHeaderContainerStyle="{Binding Path=TemplatedParent.View.ColumnHeaderContainerStyle, RelativeSource={RelativeSource TemplatedParent}}"
                                          ColumnHeaderTemplate="{Binding Path=TemplatedParent.View.ColumnHeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                          ColumnHeaderTemplateSelector="{Binding  Path=TemplatedParent.View.ColumnHeaderTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                                          AllowsColumnReorder="{Binding Path=TemplatedParent.View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}}"
                                          ColumnHeaderContextMenu="{Binding Path=TemplatedParent.View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                          ColumnHeaderToolTip="{Binding Path=TemplatedParent.View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </ScrollViewer>
                            <ScrollContentPresenter Name="PART_ScrollContentPresenter"
                                    KeyboardNavigation.DirectionalNavigation="Local"
                                    CanContentScroll="True"
                                    CanHorizontallyScroll="False"
                                    CanVerticallyScroll="False" />
                        </DockPanel>
                        <ScrollBar Name="PART_HorizontalScrollBar"
                                   Orientation="Horizontal"
                                   Grid.Row="1"
                                   Grid.Column="0"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Value="{TemplateBinding HorizontalOffset}"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
                        <ScrollBar Name="PART_VerticalScrollBar"
                                   Grid.Row="0"
                                   Grid.Column="1"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Value="{TemplateBinding VerticalOffset}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GridViewColumnHeaderGripper" TargetType="Thumb">
        <Setter Property="Width" Value="18" />
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <LinearGradientBrush.GradientStops>
                        <GradientStopCollection>
                            <GradientStop Color="{DynamicResource BorderLightColor}" Offset="0.0" />
                            <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1.0" />
                        </GradientStopCollection>
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}" Background="Transparent">
                        <Rectangle HorizontalAlignment="Center" Width="1" Fill="{TemplateBinding Background}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="Black" Offset="0" />
                    <GradientStop Color="White" Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type GridViewColumnHeader}" TargetType="GridViewColumnHeader">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="BorderBrush" Value="{StaticResource BrushBorder}"/>
        <Setter Property="BorderThickness" Value="1,0,1,0"/>
        <Setter Property="Background" Value="{StaticResource BrushBackground}"/>
        <Setter Property="Foreground" Value="{StaticResource BrushForeground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridViewColumnHeader">
                    <Grid>
                        <Border x:Name="HeaderBorder"
                                Padding="2,0,2,0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter x:Name="HeaderContent"
                                              Margin="0,0,0,1"
                                              RecognizesAccessKey="True"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <Thumb x:Name="PART_HeaderGripper"
                               HorizontalAlignment="Right"
                               Margin="0,0,-9,0"
                               Style="{StaticResource GridViewColumnHeaderGripper}" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" Storyboard="{StaticResource HighlightAnimation}"/>
                                <VisualState x:Name="Pressed" Storyboard="{StaticResource MouseDownAnimation}"/>
                                <VisualState x:Name="Disabled" Storyboard="{StaticResource DisabledAnimation}"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Role" Value="Floating">
                <Setter Property="Opacity" Value="0.7" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GridViewColumnHeader">
                            <Canvas Name="PART_FloatingHeaderCanvas">
                                <Rectangle Fill="{TemplateBinding Background}"
                                           Width="{TemplateBinding ActualWidth}"
                                           Height="{TemplateBinding ActualHeight}" />
                            </Canvas>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Role"
                     Value="Padding">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GridViewColumnHeader">
                            <Border Name="HeaderBorder"
                                    BorderThickness="0,1,0,1"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type ListView}" TargetType="ListView">
        <Setter Property="Background" Value="{StaticResource BrushBackground}"/>
        <Setter Property="Foreground" Value="{StaticResource BrushForeground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BrushBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Border Name="Border"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <ScrollViewer Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{StaticResource BrushDisabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type ListBoxItem}" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="BorderBrush" Value="{StaticResource BrushBorder}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Grid>
                        <Border x:Name="HighlightBorder"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"/>
                        <Border x:Name="Border"
                                SnapsToDevicePixels="true"
                                Margin="{TemplateBinding Padding}"
                                Background="Transparent">
                            <Grid>
                                <GridViewRowPresenter x:Name="GridViewPresenter"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                                <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      x:Name="ListViewPresenter"
                                      Visibility="Collapsed"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                            </Grid>
                        </Border>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ThicknessAnimation From="0"
                                                            To="1"
                                                            Duration="0:00:00.125"
                                                            Storyboard.TargetProperty="BorderThickness"
                                                            Storyboard.TargetName="HighlightBorder"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="HighlightBorder" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource SDisabledCol}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="HighlightBorder" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource SSelectedBg}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="HighlightBorder" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource SSbrighterBgCol}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                            <Setter TargetName="ListViewPresenter" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="GridViewPresenter" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type ListViewItem}"
           BasedOn="{StaticResource {x:Type ListBoxItem}}"
           TargetType="{x:Type ListViewItem}"/>
</ResourceDictionary>