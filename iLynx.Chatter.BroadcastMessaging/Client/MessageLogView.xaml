<UserControl x:Class="iLynx.Chatter.BroadcastMessaging.Client.MessageLogView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:broadcastMessaging="clr-namespace:iLynx.Chatter.BroadcastMessaging"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <RichTextBox broadcastMessaging:RichTextBoxExtensions.Document="{Binding MessageLog}"
                     Background="Transparent"
                     BorderThickness="0"
                     BorderBrush="Transparent"
                     IsReadOnly="True"/>
        <!--<ListView ItemsSource="{Binding Entries}">
            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel Orientation="Vertical"/>
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <Border HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalAlignment}">
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.ItemTemplate>
                <DataTemplate DataType="{x:Type broadcastMessaging:LogEntry}">
                    <TextBox IsReadOnly="True"
                             AcceptsReturn="True"
                             TextWrapping="Wrap"
                             Margin="8,16,4,0"
                             x:Name="ContentBox">
                        <TextBox.Text>
                            <MultiBinding StringFormat="{}[{0} - {1:t}]: {2}" Mode="OneWay">
                                <Binding Path="Nick" Mode="OneWay"/>
                                <Binding Path="TimeStamp" Mode="OneWay"/>
                                <Binding Path="Content" Mode="OneWay"/>
                            </MultiBinding>
                        </TextBox.Text>
                    </TextBox>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsSelf}" Value="True">
                            <Setter TargetName="ContentBox" Property="HorizontalAlignment" Value="Right"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>-->
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBox Text="{Binding ChatLine, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            <Button Grid.Column="1"
                    Content="Send"
                    Padding="8,2"
                    Margin="4,2"
                    IsDefault="True"
                    Command="{Binding SendCommand}"/>
        </Grid>
    </Grid>
</UserControl>
